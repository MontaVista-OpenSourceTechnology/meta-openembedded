From 525e697bf465a803ebad1b2bbf5280a82cf94d11 Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Tue, 2 Aug 2022 07:31:43 +0000
Subject: [PATCH] CVE-2022-24407

CVE-2022-24407 Escape password for SQL insert/update commands.

Upstream-Status: Backport from https://github.com/cyrusimap/cyrus-sasl/commit/2d2e97b0eb53fa7f87a3bf1529d8f712dd954480
CVE: CVE-2022-24407
Signed-off-by: Klaus Espenlaub <klaus@espenlaub.com>
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 plugins/sql.c | 26 +++++++++++++++++++++++---
 1 file changed, 23 insertions(+), 3 deletions(-)

diff --git a/plugins/sql.c b/plugins/sql.c
index 3b89383..90502c1 100644
--- a/plugins/sql.c
+++ b/plugins/sql.c
@@ -1145,6 +1145,7 @@ static int sql_auxprop_store(void *glob_context,
     char *statement = NULL;
     char *escap_userid = NULL;
     char *escap_realm = NULL;
+    char *escap_passwd = NULL;
     const char *cmd;
     
     sql_settings_t *settings;
@@ -1216,6 +1217,11 @@ static int sql_auxprop_store(void *glob_context,
 			    "Unable to begin transaction\n");
     }
     for (cur = to_store; ret == SASL_OK && cur->name; cur++) {
+    /* Free the buffer, current content is from previous loop. */
+    if (escap_passwd) {
+        sparams->utils->free(escap_passwd);
+        escap_passwd = NULL;
+    }
 
 	if (cur->name[0] == '*') {
 	    continue;
@@ -1237,19 +1243,32 @@ static int sql_auxprop_store(void *glob_context,
 	}
 	sparams->utils->free(statement);
 
+        if (cur->values[0]) {
+            escap_passwd = (char *)sparams->utils->malloc(strlen(cur->values[0])*2+1);
+            if (!escap_passwd) {
+            ret = SASL_NOMEM;
+            break;
+            }
+            settings->sql_engine->sql_escape_str(escap_passwd, cur->values[0]);
+        }
+
 	/* create a statement that we will use */
 	statement = sql_create_statement(cmd, cur->name, escap_userid,
 					 escap_realm,
-					 cur->values && cur->values[0] ?
-					 cur->values[0] : SQL_NULL_VALUE,
+                                         escap_passwd ?
+                                         escap_passwd : SQL_NULL_VALUE,
 					 sparams->utils);
+        if (!statement) {
+            ret = SASL_NOMEM;
+            break;
+        }
 	
 	{
 	    char *log_statement =
 		sql_create_statement(cmd, cur->name,
 				     escap_userid,
 				     escap_realm,
-				     cur->values && cur->values[0] ?
+                                     escap_passwd ?
 				     "<omitted>" : SQL_NULL_VALUE,
 				     sparams->utils);
 	    sparams->utils->log(NULL, SASL_LOG_DEBUG,
@@ -1282,6 +1301,7 @@ static int sql_auxprop_store(void *glob_context,
   done:
     if (escap_userid) sparams->utils->free(escap_userid);
     if (escap_realm) sparams->utils->free(escap_realm);
+    if (escap_passwd) sparams->utils->free(escap_passwd);
     if (conn) settings->sql_engine->sql_close(conn);
     if (userid) sparams->utils->free(userid);
     if (realm) sparams->utils->free(realm);
-- 
2.18.2

