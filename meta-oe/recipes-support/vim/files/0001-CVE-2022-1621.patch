From d521c65fe9b3255943ad505933ed41c07be17460 Mon Sep 17 00:00:00 2001
From: Hitendra Prajapati <hprajapati@mvista.com>
Date: Tue, 31 May 2022 17:03:48 +0530
Subject: [PATCH] CVE-2022-1621

Upstream-Status: Backport from https://github.com/vim/vim/commit/7c824682d2028432ee082703ef0ab399867a089b

Signed-off-by: Hitendra Prajapati <hprajapati@mvista.com>
---
 src/globals.h              |  5 +++++
 src/mbyte.c                |  2 +-
 src/spellfile.c            | 10 ++++++++++
 src/testdir/test_spell.vim |  5 +++++
 src/version.c              |  2 ++
 5 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/src/globals.h b/src/globals.h
index a9f0b8c2f..029f18256 100644
--- a/src/globals.h
+++ b/src/globals.h
@@ -1611,6 +1611,11 @@ EXTERN char_u e_invalidreg[]    INIT(= N_("E850: Invalid register name"));
 EXTERN char_u e_dirnotf[]	INIT(= N_("E919: Directory not found in '%s': \"%s\""));
 EXTERN char e_expression_too_recursive_str[]	INIT(= N_("E1169: Expression too recursive: %s"));
 
+#ifdef FEAT_SPELL
+EXTERN char e_illegal_character_in_word[]
+	INIT(= N_("E1280: Illegal character in word"));
+#endif
+
 #ifdef MACOS_X_UNIX
 EXTERN short disallow_gui	INIT(= FALSE);
 #endif
diff --git a/src/mbyte.c b/src/mbyte.c
index 33fa0a254..c73d8ae6a 100644
--- a/src/mbyte.c
+++ b/src/mbyte.c
@@ -4012,7 +4012,7 @@ theend:
     convert_setup(&vimconv, NULL, NULL);
 }
 
-#if defined(FEAT_GUI_GTK) || defined(PROTO)
+#if defined(FEAT_GUI_GTK) || defined(FEAT_SPELL) || defined(PROTO)
 /*
  * Return TRUE if string "s" is a valid utf-8 string.
  * When "end" is NULL stop at the first NUL.
diff --git a/src/spellfile.c b/src/spellfile.c
index 6188aaf40..52e7735be 100644
--- a/src/spellfile.c
+++ b/src/spellfile.c
@@ -4441,6 +4441,10 @@ store_word(
     int		res = OK;
     char_u	*p;
 
+    // Avoid adding illegal bytes to the word tree.
+    if (enc_utf8 && !utf_valid_string(word, NULL))
+	return FAIL;
+
     (void)spell_casefold(word, len, foldword, MAXWLEN);
     for (p = pfxlist; res == OK; ++p)
     {
@@ -6251,6 +6255,12 @@ spell_add_word(
     int		i;
     char_u	*spf;
 
+    if (enc_utf8 && !utf_valid_string(word, NULL))
+    {
+	emsg(_(e_illegal_character_in_word));
+	return;
+    }
+
     if (idx == 0)	    /* use internal wordlist */
     {
 	if (int_wordlist == NULL)
diff --git a/src/testdir/test_spell.vim b/src/testdir/test_spell.vim
index ddacae52d..8957e3776 100644
--- a/src/testdir/test_spell.vim
+++ b/src/testdir/test_spell.vim
@@ -54,6 +54,11 @@ func Test_spellreall()
   bwipe!
 endfunc
 
+" Invalid bytes may cause trouble when creating the word list.
+func Test_check_for_valid_word()
+  call assert_fails("spellgood! 0\xac", 'E1280:')
+endfunc
+
 func Test_zz_basic()
   call LoadAffAndDic(g:test_data_aff1, g:test_data_dic1)
   call RunGoodBad("wrong OK puts. Test the end",
diff --git a/src/version.c b/src/version.c
index d572ecdd4..b611b1c1d 100644
--- a/src/version.c
+++ b/src/version.c
@@ -769,6 +769,8 @@ static char *(features[]) =
 
 static int included_patches[] =
 {   /* Add new patch number below this line */
+/**/
+    4919,
 /**/
     4901,
 /**/
-- 
2.25.1

