From c7399a802e44a1acaf6ec5c239cfeb7b161505a6 Mon Sep 17 00:00:00 2001
From: Hitendra Prajapati <hprajapati@mvista.com>
Date: Wed, 30 Mar 2022 11:29:11 +0530
Subject: [PATCH] CVE-2022-0261

Upstream-Status: Backport from https://github.com/vim/vim/commit/9f8c304c8a390ade133bac29963dc8e56ab14cbc

Signed-off-by: Hitendra Prajapati <hprajapati@mvista.com>
---
 src/ops.c                   | 45 ++++++++++++++++++++++++-------------
 src/testdir/test_visual.vim |  9 ++++++++
 src/version.c               |  2 ++
 3 files changed, 41 insertions(+), 15 deletions(-)

diff --git a/src/ops.c b/src/ops.c
index 5c58e523f..86dd0cd95 100644
--- a/src/ops.c
+++ b/src/ops.c
@@ -629,23 +629,31 @@ block_insert(
 	    if (b_insert)
 	    {
 		off = (*mb_head_off)(oldp, oldp + offset + spaces);
+		spaces -= off;
+		count -= off;
 	    }
 	    else
 	    {
-		off = (*mb_off_next)(oldp, oldp + offset);
-		offset += off;
+		// spaces fill the gap, the character that's at the edge moves
+		// right
+		off = (*mb_head_off)(oldp, oldp + offset);
+		offset -= off;
 	    }
-	    spaces -= off;
-	    count -= off;
 	}
+
+	if (spaces < 0)  // can happen when the cursor was moved
+	    spaces = 0;
 #endif
 
-	newp = alloc_check((unsigned)(STRLEN(oldp)) + s_len + count + 1);
+	// Make sure the allocated size matches what is actually copied below.
+	newp = alloc(STRLEN(oldp) + spaces + s_len
+		    + (spaces > 0 && !bdp->is_short ? p_ts - spaces : 0)
+								  + count + 1);
 	if (newp == NULL)
 	    continue;
 
 	/* copy up to shifted part */
-	mch_memmove(newp, oldp, (size_t)(offset));
+	mch_memmove(newp, oldp, (size_t)offset);
 	oldp += offset;
 
 	/* insert pre-padding */
@@ -655,14 +663,21 @@ block_insert(
 	mch_memmove(newp + offset + spaces, s, (size_t)s_len);
 	offset += s_len;
 
-	if (spaces && !bdp->is_short)
+	if (spaces > 0 && !bdp->is_short)
 	{
-	    /* insert post-padding */
-	    vim_memset(newp + offset + spaces, ' ', (size_t)(p_ts - spaces));
-	    /* We're splitting a TAB, don't copy it. */
-	    oldp++;
-	    /* We allowed for that TAB, remember this now */
-	    count++;
+	    if (*oldp == TAB)
+	    {
+		// insert post-padding
+		vim_memset(newp + offset + spaces, ' ',
+						    (size_t)(p_ts - spaces));
+		// we're splitting a TAB, don't copy it
+		oldp++;
+		// We allowed for that TAB, remember this now
+		count++;
+	    }
+	    else
+		// Not a TAB, no extra spaces
+		count = spaces;
 	}
 
 	if (spaces > 0)
@@ -2625,9 +2640,9 @@ op_insert(oparg_T *oap, long count1)
 		oap->start_vcol = t;
 	    }
 	    else if (oap->op_type == OP_APPEND
-		      && oap->end.col
+		      && oap->start.col
 #ifdef FEAT_VIRTUALEDIT
-			    + oap->end.coladd
+			    + oap->start.coladd
 #endif
 			>= curbuf->b_op_start_orig.col
 #ifdef FEAT_VIRTUALEDIT
diff --git a/src/testdir/test_visual.vim b/src/testdir/test_visual.vim
index 25d4be9c9..65165a728 100644
--- a/src/testdir/test_visual.vim
+++ b/src/testdir/test_visual.vim
@@ -99,3 +99,12 @@ func Test_visual_block_ctrl_w_f()
 
   au! BufNew
 endfunc
+
+func Test_visual_block_append_invalid_char()
+  " this was going over the end of the line
+  new
+  call setline(1, ['	   let xxx', 'xxxxx', 'xxxxxxxxxxx'])
+  exe "normal 0\<C-V>jjA-\<Esc>"
+  call assert_equal(['	-   let xxx', 'xxxxx   -', 'xxxxxxxx-xxx'], getline(1, 3))
+  bwipe!
+endfunc
diff --git a/src/version.c b/src/version.c
index 401ca8616..cf97765b5 100644
--- a/src/version.c
+++ b/src/version.c
@@ -769,6 +769,8 @@ static char *(features[]) =
 
 static int included_patches[] =
 {   /* Add new patch number below this line */
+/**/
+    996,
 /**/
     995,
 /**/
-- 
2.25.1

